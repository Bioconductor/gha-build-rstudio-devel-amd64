+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''Mulcom'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://p3m.dev/cran/__linux__/jammy/latest
Bioconductor version 3.20 (BiocManager 1.30.23), R 4.4.0 (2024-04-24)
Installing package(s) 'Mulcom'
also installing the dependencies ‘dotCall64’, ‘spam’, ‘maps’, ‘fields’

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/dotCall64_1.1-1.tar.gz'
Content type 'binary/octet-stream' length 31177 bytes (30 KB)
==================================================
downloaded 30 KB

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/spam_2.10-0.tar.gz'
Content type 'binary/octet-stream' length 2738300 bytes (2.6 MB)
==================================================
downloaded 2.6 MB

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/maps_3.4.2.tar.gz'
Content type 'binary/octet-stream' length 3090049 bytes (2.9 MB)
==================================================
downloaded 2.9 MB

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/fields_15.2.tar.gz'
Content type 'binary/octet-stream' length 4057241 bytes (3.9 MB)
==================================================
downloaded 3.9 MB

trying URL 'https://bioconductor.org/packages/3.20/bioc/src/contrib/Mulcom_1.55.0.tar.gz'
Content type 'application/x-gzip' length 1147788 bytes (1.1 MB)
==================================================
downloaded 1.1 MB

* installing *binary* package ‘dotCall64’ ...
* ‘dotCall64’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘dotCall64’ as ‘dotCall64_1.1-1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (dotCall64)
* installing *binary* package ‘maps’ ...
* ‘maps’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘maps’ as ‘maps_3.4.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (maps)
* installing *binary* package ‘spam’ ...
* ‘spam’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘spam’ as ‘spam_2.10-0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (spam)
* installing *binary* package ‘fields’ ...
* ‘fields’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘fields’ as ‘fields_15.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (fields)
* installing *source* package ‘Mulcom’ ...
** using staged installation
** libs
using C++ compiler: ‘g++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0’
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Wformat-security -Wdate-time -D_FORTIFY_SOURCE=2 -g   -c mulLibs.cc -o mulLibs.o
g++ -std=gnu++17 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o Mulcom.so mulLibs.o -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-Mulcom/00new/Mulcom/libs
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘Mulcom’ as ‘Mulcom_1.55.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (Mulcom)

The downloaded source packages are in
	‘/tmp/RtmpLzvq9A/downloaded_packages’
Old packages: 'highr', 'textshaping'

real	0m11.926s
user	0m7.665s
sys	0m2.083s
