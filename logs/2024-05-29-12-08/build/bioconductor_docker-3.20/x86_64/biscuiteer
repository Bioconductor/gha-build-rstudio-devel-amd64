+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''biscuiteer'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://p3m.dev/cran/__linux__/jammy/latest
Bioconductor version 3.20 (BiocManager 1.30.23), R 4.4.0 (2024-04-24)
Installing package(s) 'biscuiteer'
also installing the dependencies ‘rex’, ‘biscuiteerData’, ‘qualV’, ‘Mus.musculus’, ‘DSS’, ‘covr’, ‘scmeth’

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/rex_1.2.1.tar.gz'
Content type 'binary/octet-stream' length 126863 bytes (123 KB)
==================================================
downloaded 123 KB

trying URL 'https://bioconductor.org/packages/3.20/data/experiment/src/contrib/biscuiteerData_1.19.0.tar.gz'
Content type 'application/x-gzip' length 192702 bytes (188 KB)
==================================================
downloaded 188 KB

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/qualV_0.3-5.tar.gz'
Content type 'binary/octet-stream' length 133133 bytes (130 KB)
==================================================
downloaded 130 KB

trying URL 'https://bioconductor.org/packages/3.20/data/annotation/src/contrib/Mus.musculus_1.3.1.tar.gz'
Content type 'application/x-gzip' length 1618 bytes
==================================================
downloaded 1618 bytes

trying URL 'https://bioconductor.org/packages/3.20/bioc/src/contrib/DSS_2.53.0.tar.gz'
Content type 'application/x-gzip' length 2127930 bytes (2.0 MB)
==================================================
downloaded 2.0 MB

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/covr_3.6.4.tar.gz'
Content type 'binary/octet-stream' length 328819 bytes (321 KB)
==================================================
downloaded 321 KB

trying URL 'https://bioconductor.org/packages/3.20/bioc/src/contrib/scmeth_1.25.0.tar.gz'
Content type 'application/x-gzip' length 786606 bytes (768 KB)
==================================================
downloaded 768 KB

trying URL 'https://bioconductor.org/packages/3.20/bioc/src/contrib/biscuiteer_1.19.0.tar.gz'
Content type 'application/x-gzip' length 4992767 bytes (4.8 MB)
==================================================
downloaded 4.8 MB

* installing *binary* package ‘rex’ ...
* ‘rex’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘rex’ as ‘rex_1.2.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (rex)
* installing *source* package ‘biscuiteerData’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘biscuiteerData’ as ‘biscuiteerData_1.19.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (biscuiteerData)
* installing *binary* package ‘qualV’ ...
* ‘qualV’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘qualV’ as ‘qualV_0.3-5_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (qualV)
* installing *source* package ‘Mus.musculus’ ...
** using staged installation
** R
** data
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘Mus.musculus’ as ‘Mus.musculus_1.3.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (Mus.musculus)
* installing *source* package ‘DSS’ ...
** using staged installation
** libs
using C compiler: ‘gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0’
gcc -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Wformat-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c compute_var_smooth.c -o compute_var_smooth.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Wformat-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c filter.c -o filter.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Wformat-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c nitem.c -o nitem.o
gcc -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o DSS.so compute_var_smooth.o filter.o nitem.o -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-DSS/00new/DSS/libs
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘DSS’ as ‘DSS_2.53.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (DSS)
* installing *source* package ‘scmeth’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘scmeth’ as ‘scmeth_1.25.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (scmeth)
* installing *binary* package ‘covr’ ...
* ‘covr’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘covr’ as ‘covr_3.6.4_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (covr)
* installing *source* package ‘biscuiteer’ ...
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
Warning: replacing previous import ‘BiocParallel::bpstart’ by ‘QDNAseq::bpstart’ when loading ‘biscuiteer’
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
Warning: replacing previous import ‘BiocParallel::bpstart’ by ‘QDNAseq::bpstart’ when loading ‘biscuiteer’
** testing if installed package can be loaded from final location
Warning: replacing previous import ‘BiocParallel::bpstart’ by ‘QDNAseq::bpstart’ when loading ‘biscuiteer’
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘biscuiteer’ as ‘biscuiteer_1.19.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (biscuiteer)

The downloaded source packages are in
	‘/tmp/RtmpaaDJ52/downloaded_packages’
Old packages: 'highr', 'textshaping'

real	2m30.577s
user	2m13.231s
sys	0m11.305s
* installing *source* package ‘QDNAseq.hg19’ ...
** using staged installation
** R
** data
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘QDNAseq.hg19’ as ‘QDNAseq.hg19_1.35.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (QDNAseq.hg19)
* installing *source* package ‘QDNAseq.mm10’ ...
** using staged installation
** R
** data
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘QDNAseq.mm10’ as ‘QDNAseq.mm10_1.35.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (QDNAseq.mm10)
