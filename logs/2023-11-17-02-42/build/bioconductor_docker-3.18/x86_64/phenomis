+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''phenomis'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://packagemanager.posit.co/cran/__linux__/jammy/latest
Bioconductor version 3.18 (BiocManager 1.30.22), R 4.3.2 (2023-10-31)
Installing package(s) 'phenomis'
also installing the dependencies ‘proxy’, ‘chk’, ‘git2r’, ‘lgr’, ‘multcompView’, ‘gmp’, ‘Rmpfr’, ‘SuppDists’, ‘kSamples’, ‘BWStest’, ‘e1071’, ‘randomForest’, ‘biodb’, ‘biodbChebi’, ‘igraph’, ‘PMCMRplus’, ‘ranger’, ‘VennDiagram’, ‘biosigner’, ‘CLL’

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/proxy_0.4-27.tar.gz'
Content type 'binary/octet-stream' length 174072 bytes (169 KB)
==================================================
downloaded 169 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/chk_0.9.1.tar.gz'
Content type 'binary/octet-stream' length 336705 bytes (328 KB)
==================================================
downloaded 328 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/git2r_0.32.0.tar.gz'
Content type 'binary/octet-stream' length 435401 bytes (425 KB)
==================================================
downloaded 425 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/lgr_0.4.4.tar.gz'
Content type 'binary/octet-stream' length 1380803 bytes (1.3 MB)
==================================================
downloaded 1.3 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/multcompView_0.1-9.tar.gz'
Content type 'binary/octet-stream' length 114558 bytes (111 KB)
==================================================
downloaded 111 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/gmp_0.7-2.tar.gz'
Content type 'binary/octet-stream' length 321169 bytes (313 KB)
==================================================
downloaded 313 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/Rmpfr_0.9-3.tar.gz'
Content type 'binary/octet-stream' length 1208612 bytes (1.2 MB)
==================================================
downloaded 1.2 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/SuppDists_1.1-9.7.tar.gz'
Content type 'binary/octet-stream' length 236506 bytes (230 KB)
==================================================
downloaded 230 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/kSamples_1.2-10.tar.gz'
Content type 'binary/octet-stream' length 248287 bytes (242 KB)
==================================================
downloaded 242 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/BWStest_0.2.3.tar.gz'
Content type 'binary/octet-stream' length 138548 bytes (135 KB)
==================================================
downloaded 135 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/e1071_1.7-13.tar.gz'
Content type 'binary/octet-stream' length 578232 bytes (564 KB)
==================================================
downloaded 564 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/randomForest_4.7-1.1.tar.gz'
Content type 'binary/octet-stream' length 216340 bytes (211 KB)
==================================================
downloaded 211 KB

trying URL 'https://bioconductor.org/packages/3.18/bioc/src/contrib/biodb_1.10.0.tar.gz'
Content type 'application/x-gzip' length 1897459 bytes (1.8 MB)
==================================================
downloaded 1.8 MB

trying URL 'https://bioconductor.org/packages/3.18/bioc/src/contrib/biodbChebi_1.8.0.tar.gz'
Content type 'application/x-gzip' length 319657 bytes (312 KB)
==================================================
downloaded 312 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/igraph_1.5.1.tar.gz'
Content type 'binary/octet-stream' length 4875394 bytes (4.6 MB)
==================================================
downloaded 4.6 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/PMCMRplus_1.9.8.tar.gz'
Content type 'binary/octet-stream' length 1214091 bytes (1.2 MB)
==================================================
downloaded 1.2 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/ranger_0.16.0.tar.gz'
Content type 'binary/octet-stream' length 418645 bytes (408 KB)
==================================================
downloaded 408 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/VennDiagram_1.7.3.tar.gz'
Content type 'binary/octet-stream' length 248106 bytes (242 KB)
==================================================
downloaded 242 KB

trying URL 'https://bioconductor.org/packages/3.18/bioc/src/contrib/biosigner_1.30.0.tar.gz'
Content type 'application/x-gzip' length 4434377 bytes (4.2 MB)
==================================================
downloaded 4.2 MB

trying URL 'https://bioconductor.org/packages/3.18/data/experiment/src/contrib/CLL_1.42.0.tar.gz'
Content type 'application/x-gzip' length 16658229 bytes (15.9 MB)
==================================================
downloaded 15.9 MB

trying URL 'https://bioconductor.org/packages/3.18/bioc/src/contrib/phenomis_1.4.0.tar.gz'
Content type 'application/x-gzip' length 3480038 bytes (3.3 MB)
==================================================
downloaded 3.3 MB

* installing *binary* package ‘proxy’ ...
* ‘proxy’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘proxy’ as ‘proxy_0.4-27_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (proxy)
* installing *binary* package ‘chk’ ...
* ‘chk’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘chk’ as ‘chk_0.9.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (chk)
* installing *binary* package ‘git2r’ ...
* ‘git2r’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘git2r’ as ‘git2r_0.32.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (git2r)
* installing *binary* package ‘lgr’ ...
* ‘lgr’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘lgr’ as ‘lgr_0.4.4_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (lgr)
* installing *binary* package ‘multcompView’ ...
* ‘multcompView’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘multcompView’ as ‘multcompView_0.1-9_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (multcompView)
* installing *binary* package ‘gmp’ ...
* ‘gmp’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘gmp’ as ‘gmp_0.7-2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (gmp)
* installing *binary* package ‘SuppDists’ ...
* ‘SuppDists’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘SuppDists’ as ‘SuppDists_1.1-9.7_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (SuppDists)
* installing *binary* package ‘BWStest’ ...
* ‘BWStest’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘BWStest’ as ‘BWStest_0.2.3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (BWStest)
* installing *binary* package ‘randomForest’ ...
* ‘randomForest’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘randomForest’ as ‘randomForest_4.7-1.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (randomForest)
* installing *binary* package ‘igraph’ ...
* ‘igraph’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘igraph’ as ‘igraph_1.5.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (igraph)
* installing *binary* package ‘ranger’ ...
* ‘ranger’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘ranger’ as ‘ranger_0.16.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ranger)
* installing *binary* package ‘VennDiagram’ ...
* ‘VennDiagram’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘VennDiagram’ as ‘VennDiagram_1.7.3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (VennDiagram)
* installing *source* package ‘CLL’ ...
** using staged installation
** R
** data
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘CLL’ as ‘CLL_1.42.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (CLL)
* installing *binary* package ‘Rmpfr’ ...
* ‘Rmpfr’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘Rmpfr’ as ‘Rmpfr_0.9-3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (Rmpfr)
* installing *binary* package ‘kSamples’ ...
* ‘kSamples’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘kSamples’ as ‘kSamples_1.2-10_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (kSamples)
* installing *binary* package ‘e1071’ ...
* ‘e1071’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘e1071’ as ‘e1071_1.7-13_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (e1071)
* installing *source* package ‘biodb’ ...
** using staged installation
** libs
using C++ compiler: ‘g++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0’
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/usr/local/lib/R/site-library/testthat/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c RcppExports.cpp -o RcppExports.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/usr/local/lib/R/site-library/testthat/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c closeMatchPpm.cpp -o closeMatchPpm.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/usr/local/lib/R/site-library/testthat/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c test-100-ms_matching.cpp -o test-100-ms_matching.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/usr/local/lib/R/site-library/testthat/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c test-runner.cpp -o test-runner.o
g++ -std=gnu++17 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o biodb.so RcppExports.o closeMatchPpm.o test-100-ms_matching.o test-runner.o -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-biodb/00new/biodb/libs
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘biodb’ as ‘biodb_1.10.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (biodb)
* installing *source* package ‘biodbChebi’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘biodbChebi’ as ‘biodbChebi_1.8.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (biodbChebi)
* installing *binary* package ‘PMCMRplus’ ...
* ‘PMCMRplus’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘PMCMRplus’ as ‘PMCMRplus_1.9.8_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (PMCMRplus)
* installing *source* package ‘biosigner’ ...
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘biosigner’ as ‘biosigner_1.30.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (biosigner)
* installing *source* package ‘phenomis’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘phenomis’ as ‘phenomis_1.4.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (phenomis)

The downloaded source packages are in
	‘/tmp/RtmpJ0Mn9j/downloaded_packages’
Old packages: 'BiocVersion', 'evaluate', 'htmltools', 'httr2', 'knitr',
  'lifecycle', 'rlang', 'rprojroot', 'stringi', 'stringr', 'waldo', 'withr',
  'xfun', 'Matrix'

real	2m4.598s
user	1m48.701s
sys	0m10.525s
* installing *source* package ‘CLL’ ...
** using staged installation
** R
** data
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘CLL’ as ‘CLL_1.42.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (CLL)
