+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''wateRmelon'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://packagemanager.posit.co/cran/__linux__/jammy/latest
Bioconductor version 3.18 (BiocManager 1.30.22), R 4.3.2 (2023-10-31)
Installing package(s) 'wateRmelon'
also installing the dependencies ‘ROC’, ‘RPMM’, ‘irlba’, ‘FlowSorted.Blood.EPIC’

trying URL 'https://bioconductor.org/packages/3.18/bioc/src/contrib/ROC_1.78.0.tar.gz'
Content type 'application/x-gzip' length 257072 bytes (251 KB)
==================================================
downloaded 251 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/RPMM_1.25.tar.gz'
Content type 'binary/octet-stream' length 267682 bytes (261 KB)
==================================================
downloaded 261 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/irlba_2.3.5.1.tar.gz'
Content type 'binary/octet-stream' length 290619 bytes (283 KB)
==================================================
downloaded 283 KB

trying URL 'https://bioconductor.org/packages/3.18/data/experiment/src/contrib/FlowSorted.Blood.EPIC_2.6.0.tar.gz'
Content type 'application/x-gzip' length 98397 bytes (96 KB)
==================================================
downloaded 96 KB

trying URL 'https://bioconductor.org/packages/3.18/bioc/src/contrib/wateRmelon_2.8.0.tar.gz'
Content type 'application/x-gzip' length 3416473 bytes (3.3 MB)
==================================================
downloaded 3.3 MB

* installing *source* package ‘ROC’ ...
** using staged installation
** libs
using C++ compiler: ‘g++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0’
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c ROC.cc -o ROC.o
g++ -std=gnu++17 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o ROC.so ROC.o -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-ROC/00new/ROC/libs
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘ROC’ as ‘ROC_1.78.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ROC)
* installing *binary* package ‘RPMM’ ...
* ‘RPMM’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘RPMM’ as ‘RPMM_1.25_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (RPMM)
* installing *binary* package ‘irlba’ ...
* ‘irlba’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘irlba’ as ‘irlba_2.3.5.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (irlba)
* installing *source* package ‘FlowSorted.Blood.EPIC’ ...
** using staged installation
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘FlowSorted.Blood.EPIC’ as ‘FlowSorted.Blood.EPIC_2.6.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (FlowSorted.Blood.EPIC)
* installing *source* package ‘wateRmelon’ ...
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
No methods found in package ‘RSQLite’ for request: ‘dbListFields’ when loading ‘lumi’
Creating a generic function from function ‘as.methylumi’ in package ‘wateRmelon’
Creating a generic function from function ‘adjustedDasen’ in package ‘wateRmelon’
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
No methods found in package ‘RSQLite’ for request: ‘dbListFields’ when loading ‘lumi’
** testing if installed package can be loaded from final location
No methods found in package ‘RSQLite’ for request: ‘dbListFields’ when loading ‘lumi’
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘wateRmelon’ as ‘wateRmelon_2.8.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (wateRmelon)

The downloaded source packages are in
	‘/tmp/RtmpEsGzDE/downloaded_packages’
Old packages: 'Gviz', 'BiocVersion', 'evaluate', 'htmltools', 'httr2', 'knitr',
  'lifecycle', 'rlang', 'rprojroot', 'stringi', 'stringr', 'waldo', 'withr',
  'xfun', 'Matrix'

real	1m16.708s
user	1m9.600s
sys	0m6.098s
* installing *binary* package ‘proxy’ ...
* ‘proxy’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘proxy’ as ‘proxy_0.4-27_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (proxy)
* installing *binary* package ‘locfdr’ ...
* ‘locfdr’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘locfdr’ as ‘locfdr_1.1-8_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (locfdr)
* installing *source* package ‘FlowSorted.CordBlood.450k’ ...
** using staged installation
** data
*** moving datasets to lazyload DB
** inst
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘FlowSorted.CordBlood.450k’ as ‘FlowSorted.CordBlood.450k_1.30.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (FlowSorted.CordBlood.450k)
* installing *source* package ‘FlowSorted.CordBloodNorway.450k’ ...
** using staged installation
** data
*** moving datasets to lazyload DB
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘FlowSorted.CordBloodNorway.450k’ as ‘FlowSorted.CordBloodNorway.450k_1.28.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (FlowSorted.CordBloodNorway.450k)
* installing *source* package ‘IlluminaHumanMethylationEPICanno.ilm10b4.hg19’ ...
** using staged installation
** data
*** moving datasets to lazyload DB
** inst
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘IlluminaHumanMethylationEPICanno.ilm10b4.hg19’ as ‘IlluminaHumanMethylationEPICanno.ilm10b4.hg19_0.6.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (IlluminaHumanMethylationEPICanno.ilm10b4.hg19)
* installing *source* package ‘FlowSorted.Blood.EPIC’ ...
** using staged installation
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘FlowSorted.Blood.EPIC’ as ‘FlowSorted.Blood.EPIC_2.6.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (FlowSorted.Blood.EPIC)
* installing *binary* package ‘e1071’ ...
* ‘e1071’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘e1071’ as ‘e1071_1.7-13_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (e1071)
* installing *source* package ‘EpiDISH’ ...
** using staged installation
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘EpiDISH’ as ‘EpiDISH_2.18.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (EpiDISH)
