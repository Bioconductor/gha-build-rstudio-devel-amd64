+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''alabaster.matrix'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://packagemanager.posit.co/cran/__linux__/jammy/latest
Bioconductor version 3.18 (BiocManager 1.30.22), R 4.3.2 (2023-10-31)
Installing package(s) 'alabaster.matrix'
also installing the dependency ‘chihaya’

trying URL 'https://bioconductor.org/packages/3.18/bioc/src/contrib/chihaya_1.2.0.tar.gz'
Content type 'application/x-gzip' length 264351 bytes (258 KB)
==================================================
downloaded 258 KB

trying URL 'https://bioconductor.org/packages/3.18/bioc/src/contrib/alabaster.matrix_1.2.0.tar.gz'
Content type 'application/x-gzip' length 244390 bytes (238 KB)
==================================================
downloaded 238 KB

* installing *source* package ‘chihaya’ ...
** using staged installation
** libs
using C++ compiler: ‘g++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0’
using C++17
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include -D USE_HDF5=1 -D USE_ZLIB=1 -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/Rhdf5lib/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c RcppExports.cpp -o RcppExports.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include -D USE_HDF5=1 -D USE_ZLIB=1 -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/Rhdf5lib/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c get_best_type.cpp -o get_best_type.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include -D USE_HDF5=1 -D USE_ZLIB=1 -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/Rhdf5lib/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c h5exists.cpp -o h5exists.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include -D USE_HDF5=1 -D USE_ZLIB=1 -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/Rhdf5lib/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c validate.cpp -o validate.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include -D USE_HDF5=1 -D USE_ZLIB=1 -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/Rhdf5lib/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c write_scalar.cpp -o write_scalar.o
g++ -std=gnu++17 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o chihaya.so RcppExports.o get_best_type.o h5exists.o validate.o write_scalar.o /tmp/tmp/built/Rhdf5lib/lib/libhdf5_cpp.a /tmp/tmp/built/Rhdf5lib/lib/libhdf5.a -lcrypto -lcurl -lsz -laec -lz -ldl -lm -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-chihaya/00new/chihaya/libs
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘chihaya’ as ‘chihaya_1.2.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (chihaya)
* installing *source* package ‘alabaster.matrix’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘alabaster.matrix’ as ‘alabaster.matrix_1.2.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (alabaster.matrix)

The downloaded source packages are in
	‘/tmp/RtmphHp8xu/downloaded_packages’
Old packages: 'evaluate', 'htmltools', 'httr2', 'knitr', 'lifecycle', 'rlang',
  'rprojroot', 'stringi', 'stringr', 'waldo', 'withr', 'xfun', 'Matrix'

real	0m49.013s
user	0m43.851s
sys	0m4.747s
