+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''hierGWAS'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://p3m.dev/cran/__linux__/jammy/2024-06-13
Bioconductor version 3.20 (BiocManager 1.30.23), R 4.4.0 (2024-04-24)
Installing package(s) 'hierGWAS'
also installing the dependencies ‘iterators’, ‘foreach’, ‘shape’, ‘RcppEigen’, ‘fastcluster’, ‘glmnet’, ‘fmsb’, ‘BiocGenerics’, ‘RUnit’

trying URL 'https://p3m.dev/cran/__linux__/jammy/2024-06-13/src/contrib/iterators_1.0.14.tar.gz'
Content type 'binary/octet-stream' length 346524 bytes (338 KB)
==================================================
downloaded 338 KB

trying URL 'https://p3m.dev/cran/__linux__/jammy/2024-06-13/src/contrib/foreach_1.5.2.tar.gz'
Content type 'binary/octet-stream' length 139803 bytes (136 KB)
==================================================
downloaded 136 KB

trying URL 'https://p3m.dev/cran/__linux__/jammy/2024-06-13/src/contrib/shape_1.4.6.1.tar.gz'
Content type 'binary/octet-stream' length 749996 bytes (732 KB)
==================================================
downloaded 732 KB

trying URL 'https://p3m.dev/cran/__linux__/jammy/2024-06-13/src/contrib/RcppEigen_0.3.4.0.0.tar.gz'
Content type 'binary/octet-stream' length 1843437 bytes (1.8 MB)
==================================================
downloaded 1.8 MB

trying URL 'https://p3m.dev/cran/__linux__/jammy/2024-06-13/src/contrib/fastcluster_1.2.6.tar.gz'
Content type 'binary/octet-stream' length 185641 bytes (181 KB)
==================================================
downloaded 181 KB

trying URL 'https://p3m.dev/cran/__linux__/jammy/2024-06-13/src/contrib/glmnet_4.1-8.tar.gz'
Content type 'binary/octet-stream' length 2001229 bytes (1.9 MB)
==================================================
downloaded 1.9 MB

trying URL 'https://p3m.dev/cran/__linux__/jammy/2024-06-13/src/contrib/fmsb_0.7.6.tar.gz'
Content type 'binary/octet-stream' length 402580 bytes (393 KB)
==================================================
downloaded 393 KB

trying URL 'https://bioconductor.org/packages/3.20/bioc/src/contrib/BiocGenerics_0.51.0.tar.gz'
Content type 'application/x-gzip' length 49520 bytes (48 KB)
==================================================
downloaded 48 KB

trying URL 'https://p3m.dev/cran/__linux__/jammy/2024-06-13/src/contrib/RUnit_0.4.33.tar.gz'
Content type 'binary/octet-stream' length 383638 bytes (374 KB)
==================================================
downloaded 374 KB

trying URL 'https://bioconductor.org/packages/3.20/bioc/src/contrib/hierGWAS_1.35.0.tar.gz'
Content type 'application/x-gzip' length 438750 bytes (428 KB)
==================================================
downloaded 428 KB

* installing *binary* package ‘iterators’ ...
* ‘iterators’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘iterators’ as ‘iterators_1.0.14_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (iterators)
* installing *binary* package ‘shape’ ...
* ‘shape’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘shape’ as ‘shape_1.4.6.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (shape)
* installing *binary* package ‘RcppEigen’ ...
* ‘RcppEigen’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘RcppEigen’ as ‘RcppEigen_0.3.4.0.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (RcppEigen)
* installing *binary* package ‘fastcluster’ ...
* ‘fastcluster’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘fastcluster’ as ‘fastcluster_1.2.6_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (fastcluster)
* installing *binary* package ‘fmsb’ ...
* ‘fmsb’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘fmsb’ as ‘fmsb_0.7.6_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (fmsb)
* installing *source* package ‘BiocGenerics’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
Creating a new generic function for ‘aperm’ in package ‘BiocGenerics’
Creating a new generic function for ‘append’ in package ‘BiocGenerics’
Creating a new generic function for ‘as.data.frame’ in package ‘BiocGenerics’
Creating a new generic function for ‘cbind’ in package ‘BiocGenerics’
Creating a new generic function for ‘rbind’ in package ‘BiocGenerics’
Creating a new generic function for ‘do.call’ in package ‘BiocGenerics’
Creating a new generic function for ‘duplicated’ in package ‘BiocGenerics’
Creating a new generic function for ‘anyDuplicated’ in package ‘BiocGenerics’
Creating a new generic function for ‘eval’ in package ‘BiocGenerics’
Creating a new generic function for ‘pmax’ in package ‘BiocGenerics’
Creating a new generic function for ‘pmin’ in package ‘BiocGenerics’
Creating a new generic function for ‘pmax.int’ in package ‘BiocGenerics’
Creating a new generic function for ‘pmin.int’ in package ‘BiocGenerics’
Creating a new generic function for ‘Reduce’ in package ‘BiocGenerics’
Creating a new generic function for ‘Filter’ in package ‘BiocGenerics’
Creating a new generic function for ‘Find’ in package ‘BiocGenerics’
Creating a new generic function for ‘Map’ in package ‘BiocGenerics’
Creating a new generic function for ‘Position’ in package ‘BiocGenerics’
Creating a new generic function for ‘get’ in package ‘BiocGenerics’
Creating a new generic function for ‘mget’ in package ‘BiocGenerics’
Creating a new generic function for ‘grep’ in package ‘BiocGenerics’
Creating a new generic function for ‘grepl’ in package ‘BiocGenerics’
Creating a new generic function for ‘is.unsorted’ in package ‘BiocGenerics’
Creating a new generic function for ‘lapply’ in package ‘BiocGenerics’
Creating a new generic function for ‘sapply’ in package ‘BiocGenerics’
Creating a new generic function for ‘mapply’ in package ‘BiocGenerics’
Creating a new generic function for ‘match’ in package ‘BiocGenerics’
Creating a new generic function for ‘order’ in package ‘BiocGenerics’
Creating a new generic function for ‘paste’ in package ‘BiocGenerics’
Creating a new generic function for ‘rank’ in package ‘BiocGenerics’
Creating a new generic function for ‘rownames’ in package ‘BiocGenerics’
Creating a new generic function for ‘colnames’ in package ‘BiocGenerics’
Creating a new generic function for ‘union’ in package ‘BiocGenerics’
Creating a new generic function for ‘intersect’ in package ‘BiocGenerics’
Creating a new generic function for ‘setdiff’ in package ‘BiocGenerics’
Creating a new generic function for ‘table’ in package ‘BiocGenerics’
Creating a new generic function for ‘tapply’ in package ‘BiocGenerics’
Creating a new generic function for ‘unique’ in package ‘BiocGenerics’
Creating a new generic function for ‘unsplit’ in package ‘BiocGenerics’
Creating a new generic function for ‘var’ in package ‘BiocGenerics’
Creating a new generic function for ‘sd’ in package ‘BiocGenerics’
Creating a new generic function for ‘which.min’ in package ‘BiocGenerics’
Creating a new generic function for ‘which.max’ in package ‘BiocGenerics’
Creating a new generic function for ‘IQR’ in package ‘BiocGenerics’
Creating a new generic function for ‘mad’ in package ‘BiocGenerics’
Creating a new generic function for ‘xtabs’ in package ‘BiocGenerics’
Creating a new generic function for ‘basename’ in package ‘BiocGenerics’
Creating a new generic function for ‘dirname’ in package ‘BiocGenerics’
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘BiocGenerics’ as ‘BiocGenerics_0.51.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (BiocGenerics)
* installing *binary* package ‘RUnit’ ...
* ‘RUnit’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘RUnit’ as ‘RUnit_0.4.33_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (RUnit)
* installing *binary* package ‘foreach’ ...
* ‘foreach’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘foreach’ as ‘foreach_1.5.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (foreach)
* installing *binary* package ‘glmnet’ ...
* ‘glmnet’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘glmnet’ as ‘glmnet_4.1-8_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (glmnet)
* installing *source* package ‘hierGWAS’ ...
** using staged installation
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘hierGWAS’ as ‘hierGWAS_1.35.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (hierGWAS)

The downloaded source packages are in
	‘/tmp/RtmpuHFdGX/downloaded_packages’

real	0m19.347s
user	0m10.779s
sys	0m3.545s
