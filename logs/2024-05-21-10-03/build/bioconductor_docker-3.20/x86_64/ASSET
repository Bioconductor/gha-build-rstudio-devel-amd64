+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''ASSET'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://p3m.dev/cran/__linux__/jammy/latest
Bioconductor version 3.20 (BiocManager 1.30.23), R 4.4.0 (2024-04-24)
Installing package(s) 'ASSET'
also installing the dependencies ‘mvtnorm’, ‘expm’, ‘msm’, ‘rmeta’, ‘RUnit’, ‘BiocGenerics’

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/mvtnorm_1.2-4.tar.gz'
Content type 'binary/octet-stream' length 747776 bytes (730 KB)
==================================================
downloaded 730 KB

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/expm_0.999-9.tar.gz'
Content type 'binary/octet-stream' length 207275 bytes (202 KB)
==================================================
downloaded 202 KB

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/msm_1.7.1.tar.gz'
Content type 'binary/octet-stream' length 1469023 bytes (1.4 MB)
==================================================
downloaded 1.4 MB

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/rmeta_3.0.tar.gz'
Content type 'binary/octet-stream' length 111358 bytes (108 KB)
==================================================
downloaded 108 KB

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/RUnit_0.4.33.tar.gz'
Content type 'binary/octet-stream' length 383638 bytes (374 KB)
==================================================
downloaded 374 KB

trying URL 'https://bioconductor.org/packages/3.20/bioc/src/contrib/BiocGenerics_0.51.0.tar.gz'
Content type 'application/x-gzip' length 49520 bytes (48 KB)
==================================================
downloaded 48 KB

trying URL 'https://bioconductor.org/packages/3.20/bioc/src/contrib/ASSET_2.23.0.tar.gz'
Content type 'application/x-gzip' length 329440 bytes (321 KB)
==================================================
downloaded 321 KB

* installing *binary* package ‘mvtnorm’ ...
* ‘mvtnorm’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘mvtnorm’ as ‘mvtnorm_1.2-4_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (mvtnorm)
* installing *binary* package ‘expm’ ...
* ‘expm’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘expm’ as ‘expm_0.999-9_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (expm)
* installing *binary* package ‘rmeta’ ...
* ‘rmeta’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘rmeta’ as ‘rmeta_3.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (rmeta)
* installing *binary* package ‘RUnit’ ...
* ‘RUnit’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘RUnit’ as ‘RUnit_0.4.33_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (RUnit)
* installing *source* package ‘BiocGenerics’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
Creating a new generic function for ‘aperm’ in package ‘BiocGenerics’
Creating a new generic function for ‘append’ in package ‘BiocGenerics’
Creating a new generic function for ‘as.data.frame’ in package ‘BiocGenerics’
Creating a new generic function for ‘cbind’ in package ‘BiocGenerics’
Creating a new generic function for ‘rbind’ in package ‘BiocGenerics’
Creating a new generic function for ‘do.call’ in package ‘BiocGenerics’
Creating a new generic function for ‘duplicated’ in package ‘BiocGenerics’
Creating a new generic function for ‘anyDuplicated’ in package ‘BiocGenerics’
Creating a new generic function for ‘eval’ in package ‘BiocGenerics’
Creating a new generic function for ‘pmax’ in package ‘BiocGenerics’
Creating a new generic function for ‘pmin’ in package ‘BiocGenerics’
Creating a new generic function for ‘pmax.int’ in package ‘BiocGenerics’
Creating a new generic function for ‘pmin.int’ in package ‘BiocGenerics’
Creating a new generic function for ‘Reduce’ in package ‘BiocGenerics’
Creating a new generic function for ‘Filter’ in package ‘BiocGenerics’
Creating a new generic function for ‘Find’ in package ‘BiocGenerics’
Creating a new generic function for ‘Map’ in package ‘BiocGenerics’
Creating a new generic function for ‘Position’ in package ‘BiocGenerics’
Creating a new generic function for ‘get’ in package ‘BiocGenerics’
Creating a new generic function for ‘mget’ in package ‘BiocGenerics’
Creating a new generic function for ‘grep’ in package ‘BiocGenerics’
Creating a new generic function for ‘grepl’ in package ‘BiocGenerics’
Creating a new generic function for ‘is.unsorted’ in package ‘BiocGenerics’
Creating a new generic function for ‘lapply’ in package ‘BiocGenerics’
Creating a new generic function for ‘sapply’ in package ‘BiocGenerics’
Creating a new generic function for ‘mapply’ in package ‘BiocGenerics’
Creating a new generic function for ‘match’ in package ‘BiocGenerics’
Creating a new generic function for ‘order’ in package ‘BiocGenerics’
Creating a new generic function for ‘paste’ in package ‘BiocGenerics’
Creating a new generic function for ‘rank’ in package ‘BiocGenerics’
Creating a new generic function for ‘rownames’ in package ‘BiocGenerics’
Creating a new generic function for ‘colnames’ in package ‘BiocGenerics’
Creating a new generic function for ‘union’ in package ‘BiocGenerics’
Creating a new generic function for ‘intersect’ in package ‘BiocGenerics’
Creating a new generic function for ‘setdiff’ in package ‘BiocGenerics’
Creating a new generic function for ‘table’ in package ‘BiocGenerics’
Creating a new generic function for ‘tapply’ in package ‘BiocGenerics’
Creating a new generic function for ‘unique’ in package ‘BiocGenerics’
Creating a new generic function for ‘unsplit’ in package ‘BiocGenerics’
Creating a new generic function for ‘var’ in package ‘BiocGenerics’
Creating a new generic function for ‘sd’ in package ‘BiocGenerics’
Creating a new generic function for ‘which.min’ in package ‘BiocGenerics’
Creating a new generic function for ‘which.max’ in package ‘BiocGenerics’
Creating a new generic function for ‘IQR’ in package ‘BiocGenerics’
Creating a new generic function for ‘mad’ in package ‘BiocGenerics’
Creating a new generic function for ‘xtabs’ in package ‘BiocGenerics’
Creating a new generic function for ‘basename’ in package ‘BiocGenerics’
Creating a new generic function for ‘dirname’ in package ‘BiocGenerics’
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘BiocGenerics’ as ‘BiocGenerics_0.51.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (BiocGenerics)
* installing *binary* package ‘msm’ ...
* ‘msm’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘msm’ as ‘msm_1.7.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (msm)
* installing *source* package ‘ASSET’ ...
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘ASSET’ as ‘ASSET_2.23.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ASSET)

The downloaded source packages are in
	‘/tmp/RtmpjCVfa8/downloaded_packages’
Old packages: 'rmarkdown', 'KernSmooth'

real	0m17.546s
user	0m8.834s
sys	0m2.857s
