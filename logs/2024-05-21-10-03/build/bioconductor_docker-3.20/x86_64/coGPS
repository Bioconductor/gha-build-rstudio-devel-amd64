+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''coGPS'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://p3m.dev/cran/__linux__/jammy/latest
Bioconductor version 3.20 (BiocManager 1.30.23), R 4.4.0 (2024-04-24)
Installing package(s) 'coGPS'
also installing the dependencies ‘statmod’, ‘limma’

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/statmod_1.5.0.tar.gz'
Content type 'binary/octet-stream' length 316848 bytes (309 KB)
==================================================
downloaded 309 KB

trying URL 'https://bioconductor.org/packages/3.20/bioc/src/contrib/limma_3.61.0.tar.gz'
Content type 'application/x-gzip' length 2809157 bytes (2.7 MB)
==================================================
downloaded 2.7 MB

trying URL 'https://bioconductor.org/packages/3.20/bioc/src/contrib/coGPS_1.49.0.tar.gz'
Content type 'application/x-gzip' length 1716465 bytes (1.6 MB)
==================================================
downloaded 1.6 MB

* installing *binary* package ‘statmod’ ...
* ‘statmod’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘statmod’ as ‘statmod_1.5.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (statmod)
* installing *source* package ‘coGPS’ ...
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘coGPS’ as ‘coGPS_1.49.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (coGPS)
* installing *source* package ‘limma’ ...
** using staged installation
** libs
using C compiler: ‘gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0’
gcc -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Wformat-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c init.c -o init.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Wformat-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c normexp.c -o normexp.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Wformat-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c weighted_lowess.c -o weighted_lowess.o
gcc -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o limma.so init.o normexp.o weighted_lowess.o -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-limma/00new/limma/libs
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘limma’ as ‘limma_3.61.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (limma)

The downloaded source packages are in
	‘/tmp/RtmpyWN2x0/downloaded_packages’
Old packages: 'rmarkdown', 'KernSmooth'

real	0m15.657s
user	0m11.940s
sys	0m2.135s
