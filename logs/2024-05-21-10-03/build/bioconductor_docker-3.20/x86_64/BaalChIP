+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''BaalChIP'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://p3m.dev/cran/__linux__/jammy/latest
Bioconductor version 3.20 (BiocManager 1.30.23), R 4.4.0 (2024-04-24)
Installing package(s) 'BaalChIP'
also installing the dependencies ‘minqa’, ‘nloptr’, ‘lme4’, ‘numDeriv’, ‘broom’, ‘cowplot’, ‘Deriv’, ‘modelr’, ‘microbenchmark’, ‘pbkrtest’, ‘doBy’, ‘coda’

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/minqa_1.2.7.tar.gz'
Content type 'binary/octet-stream' length 119149 bytes (116 KB)
==================================================
downloaded 116 KB

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/nloptr_2.0.3.tar.gz'
Content type 'binary/octet-stream' length 714497 bytes (697 KB)
==================================================
downloaded 697 KB

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/lme4_1.1-35.3.tar.gz'
Content type 'binary/octet-stream' length 4263358 bytes (4.1 MB)
==================================================
downloaded 4.1 MB

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/numDeriv_2016.8-1.1.tar.gz'
Content type 'binary/octet-stream' length 114329 bytes (111 KB)
==================================================
downloaded 111 KB

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/broom_1.0.6.tar.gz'
Content type 'binary/octet-stream' length 1919214 bytes (1.8 MB)
==================================================
downloaded 1.8 MB

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/cowplot_1.1.3.tar.gz'
Content type 'binary/octet-stream' length 1380530 bytes (1.3 MB)
==================================================
downloaded 1.3 MB

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/Deriv_4.1.3.tar.gz'
Content type 'binary/octet-stream' length 147247 bytes (143 KB)
==================================================
downloaded 143 KB

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/modelr_0.1.11.tar.gz'
Content type 'binary/octet-stream' length 200644 bytes (195 KB)
==================================================
downloaded 195 KB

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/microbenchmark_1.4.10.tar.gz'
Content type 'binary/octet-stream' length 62660 bytes (61 KB)
==================================================
downloaded 61 KB

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/pbkrtest_0.5.2.tar.gz'
Content type 'binary/octet-stream' length 190083 bytes (185 KB)
==================================================
downloaded 185 KB

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/doBy_4.6.21.tar.gz'
Content type 'binary/octet-stream' length 4774561 bytes (4.6 MB)
==================================================
downloaded 4.6 MB

trying URL 'https://p3m.dev/cran/__linux__/jammy/latest/src/contrib/coda_0.19-4.1.tar.gz'
Content type 'binary/octet-stream' length 328771 bytes (321 KB)
==================================================
downloaded 321 KB

trying URL 'https://bioconductor.org/packages/3.20/bioc/src/contrib/BaalChIP_1.31.0.tar.gz'
Content type 'application/x-gzip' length 47340073 bytes (45.1 MB)
==================================================
downloaded 45.1 MB

* installing *binary* package ‘minqa’ ...
* ‘minqa’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘minqa’ as ‘minqa_1.2.7_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (minqa)
* installing *binary* package ‘nloptr’ ...
* ‘nloptr’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘nloptr’ as ‘nloptr_2.0.3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (nloptr)
* installing *binary* package ‘numDeriv’ ...
* ‘numDeriv’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘numDeriv’ as ‘numDeriv_2016.8-1.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (numDeriv)
* installing *binary* package ‘broom’ ...
* ‘broom’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘broom’ as ‘broom_1.0.6_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (broom)
* installing *binary* package ‘cowplot’ ...
* ‘cowplot’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘cowplot’ as ‘cowplot_1.1.3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (cowplot)
* installing *binary* package ‘Deriv’ ...
* ‘Deriv’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘Deriv’ as ‘Deriv_4.1.3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (Deriv)
* installing *binary* package ‘microbenchmark’ ...
* ‘microbenchmark’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘microbenchmark’ as ‘microbenchmark_1.4.10_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (microbenchmark)
* installing *binary* package ‘coda’ ...
* ‘coda’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘coda’ as ‘coda_0.19-4.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (coda)
* installing *binary* package ‘lme4’ ...
* ‘lme4’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘lme4’ as ‘lme4_1.1-35.3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (lme4)
* installing *binary* package ‘modelr’ ...
* ‘modelr’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘modelr’ as ‘modelr_0.1.11_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (modelr)
* installing *binary* package ‘pbkrtest’ ...
* ‘pbkrtest’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘pbkrtest’ as ‘pbkrtest_0.5.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (pbkrtest)
* installing *binary* package ‘doBy’ ...
* ‘doBy’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘doBy’ as ‘doBy_4.6.21_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (doBy)
* installing *source* package ‘BaalChIP’ ...
** using staged installation
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘BaalChIP’ as ‘BaalChIP_1.31.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (BaalChIP)

The downloaded source packages are in
	‘/tmp/RtmpgOgevr/downloaded_packages’
Old packages: 'rmarkdown', 'KernSmooth'

real	1m15.066s
user	0m58.566s
sys	0m5.564s
